깃허브 깃설정및 커밋 & 푸쉬 & 배포 & 페이징

<브라우저가 할일- 깃허브사이트>

1.웹 브라우저 열기 - 깃허브 로그인
2. 리파지토리 만들기


<로컬프로젝트 작업위치> - jsut_쇼핑몰

3. 경로확인 = >   ls -la  (목록보기 / 숨김파일까지 모두 보기)

$ ls -la
total 1530
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:09  ./     
drwxr-xr-x 1 Administrator 197121       0 12월  5 09:52  ../    
-rw-r--r-- 1 Administrator 197121     310 11월 25 10:07  .gitignore
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:04  node_modules/
-rw-r--r-- 1 Administrator 197121     835 11월 25 10:17  package.json
-rw-r--r-- 1 Administrator 197121 1200250 12월  5 10:04  package-lock.json
drwxr-xr-x 1 Administrator 197121       0 12월  5 09:55  public/-rw-r--r-- 1 Administrator 197121    3359 11월 25 10:07  README.md
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:03  src/   
-rw-r--r-- 1 Administrator 197121     263 12월  5 10:18  깃허브.txt
-rw-r--r-- 1 Administrator 197121    3121 11월 25 17:57 '리액트 
CRA실행순서.txt'


4. 깃 설정  ==>  git init

$ git init
Initialized empty Git repository in D:/서상희/리액트/1205_JUST_SHOP_깃허브_배포/.git/

4-1  깃설정 목록확인 ==> ls -la

$ ls -la
total 1537
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:20  ./
drwxr-xr-x 1 Administrator 197121       0 12월  5 09:52  ../
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:20  .git/     <-------------이게나와야함
-rw-r--r-- 1 Administrator 197121     310 11월 25 10:07  .gitignore       
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:04  node_modules/    
-rw-r--r-- 1 Administrator 197121     835 11월 25 10:17  package.json     
-rw-r--r-- 1 Administrator 197121 1200250 12월  5 10:04  package-lock.json
drwxr-xr-x 1 Administrator 197121       0 12월  5 09:55  public/
-rw-r--r-- 1 Administrator 197121    3359 11월 25 10:07  README.md
drwxr-xr-x 1 Administrator 197121       0 12월  5 10:03  src/
-rw-r--r-- 1 Administrator 197121    1179 12월  5 10:20  깃허브.txt
-rw-r--r-- 1 Administrator 197121    3133 12월  5 10:19 '리액트 CRA실행순서.txt'       

5. 깃 환경설정  ==> git config
name 확인하기   git config user.name
email 확인하기   git config user.email

(로그인정보)
사용자 이름 (명령어) ===>  git config user.name 'sanghee2762'
$ git config user.name
sanghee2762


사용자 이메일(명령어) ===> git config user.email 'ssh2762@naver.com'
$ git config user.email
ssh2762@naver.com

///////////////////////////////////////////////

6. 깃허브 원격지 리파지토리(저장소) 깃 주소 추가 지정 origin(url)
git remote add origin https://github.com/sanghee2762/just_shop.git

6-1 주소확인하기 ==>  git remote -v
   
확인결과 
origin  https://github.com/sanghee2762/just_shop.git (fetch)
origin  https://github.com/sanghee2762/just_shop.git (push) 

7.만약 잘못된 주소면 삭제  ( 꼭 지워야할필요는 없음 )

git remote remove origin

7-1 주소 확인하기
git remote -v

8. 다시 주소 추가 하기 
git remote add origin https://github.com/sanghee2762/just_shop.git

///////////////////////////////////////////////////////////////

9. 스테이징 하기

모든(All = . ) 파일 스테이징 ==>  git add .

///////////////////////////////////////////////////////////////

10. 커밋 하기 (내가 올릴파일과 이상없는지 최종점검)
(깃 커밋 메세지( message = -m ) )

git commit -m '리액트 create-react-app just_shop'

////////////////////////////////////////////////////////

푸쉬 (push)  하기 (마스터)
git push origin master


$ git push origin master
info: please complete authentication in your browser...
Enumerating objects: 48, done.
Counting objects: 100% (48/48), done.
Delta compression using up to 4 threads
Compressing objects: 100% (48/48), done.
Writing objects: 100% (48/48), 1.36 MiB | 3.22 MiB/s, done.
Total 48 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/sanghee2762/just_shop.git
 * [new branch]      master -> master

//////////////////////////////////////////////////////////
  < 수정파일이 생겼을때 >
   웹페이지 / 파일수정

==> 스테이징부터 다시 
1) git add .
2) git commit -m '리액트 create-react-app just_shop 확장자 js => jsx 수정'
3) git push origin master



(화면청소명령어)
clear 



